images:
  server: quay.io/infinispan/server:14.0
  initContainer: registry.access.redhat.com/ubi8-micro

deploy:
  replicas: 1

  container:
    extraJvmOpts: ""
    storage:
      size: 1Gi
    resources:
      limits:
        cpu: 1200m
        memory: 5Gi
      requests:
        cpu: 1000m
        memory: 3Gi

  security:
    batch: "user create admin -p changeme"
    secretName: ""

  expose:
    # [USER] Specify `type: ""` to disable network access to clusters.
    type: Route
    nodePort: 0
    host: ""
    annotations: []

  monitoring:
    enabled: true

  logging:
    categories:
      # [USER] Specify the FQN of a package from which you want to collect logs.
      - category: com.arjuna
        # [USER] Specify the level of log messages.
        level: warn
      # No need to warn about not being able to TLS/SSL handshake
      - category: io.netty.handler.ssl.ApplicationProtocolNegotiationHandler
        level: error

  makeDataDirWritable: false

  nameOverride: ""

  resourceLabels: []

  podLabels: []

  svcLabels: []

  infinispan:
    cacheContainer:
      name: clustered
      defaultCache: default
      statistics: 'true'
      transport:
        lock-timeout: '60000'
        cluster: ${infinispan.cluster.name:cluster}
        node-name: ${infinispan.node.name:}
        stack: tcp-override
      security:
        authorization: {}
      globalState:
        overlay-configuration-storage: ~
      caches:
        memcached:
          distributedCache:
            memory:
              object: ~
        default:
          distributedCache: ~
        dist-student_aid_app:
          distributedCache:
            transaction:
              mode: NON_XA
              locking: PESSIMISTIC
            persistence:
              fileStore:
                writeBehind: ~
                segmented: 'false'
            memory:
              binary:
                size: '4200000000'
                eviction: MEMORY
        repl-student_aid_app:
          replicatedCache:
            transaction:
              mode: NON_XA
              locking: PESSIMISTIC
            persistence:
              fileStore:
                writeBehind: ~
                segmented: 'false'
        repl-codweb:
          replicatedCache:
            transaction:
              mode: NON_XA
              locking: PESSIMISTIC
            persistence:
              fileStore:
                writeBehind: ~
                segmented: 'false'
        repl-ecb:
          replicatedCache:
            transaction:
              mode: NON_XA
              locking: PESSIMISTIC
            persistence:
              fileStore:
                writeBehind: ~
                segmented: 'false'

    jgroups:
      stacks:
        tcp-override:
          stack:
            extends: tcp
            TCP:
              socketBinding: jgroups-tcp
            openshift.DNS_PING:
              socketBinding: jgroups-mping
            MERGE3: ~
            FD_SOCK:
              socketBinding: jgroups-tcp-fd
            FD_ALL: ~
            VERIFY_SUSPECT: ~
            pbcast.NAKACK2:
              use_mcast_xmit: 'false'
            UNICAST3: ~
            pbcast.STABLE: ~
            pbcast.GMS: ~
            MFC_NB: ~
            FRAG3: ~
        udp-override:
          stack:
            extends: udp
            UDP:
              socketBinding: jgroups-udp
            openshift.DNS_PING:
              socketBinding: jgroups-mping
            MERGE3: ~
            FD_SOCK:
              socketBinding: jgroups-udp-fd
            FD_ALL: ~
            VERIFY_SUSPECT: ~
            pbcast.NAKACK2: ~
            UNICAST3: ~
            pbcast.STABLE: ~
            pbcast.GMS: ~
            UFC_NB: ~
            MFC_NB: ~
            FRAG3: ~

    server:    
      endpoints:
      - connectors:
          rest:
            restConnector:
              socketBinding: rest
              cacheContainer: clustered
              authentication:
                securityRealm: ApplicationRealm
                mechanisms: BASIC
          hotrod:
            hotrodConnector:
              socketBinding: hotrod
              cacheContainer: clustered
              topologyStateTransfer:
                lockTimeout: '1000'
                replicationTimeout: '5000'
          memcached:
            memcachedConnector:
              socketBinding: memcached
              cacheContainer: clustered
              cache: memcached

      interfaces:
      - inetAddress:
          value: '${infinispan.bind.address.managment:127.0.0.1}'
        name: management
      - inetAddress:
          value: '${infinispan.bind.address:127.0.0.1}'
        name: public

      security:
        securityRealms:
        - name: ManagementRealm
          propertiesRealm:
            groupProperties:
              path: mgmt-groups.properties
              relativeTo: infinispan.server.config.dir
            userProperties:
              path: mgmt-users.properties
              relativeTo: infinispan.server.config.dir
        - name: ApplicationRealm
          propertiesRealm:
            groupProperties:
              path: application-groups.properties
              relativeTo: infinispan.server.config.dir
            userProperties:
              path: application-users.properties
              relativeTo: infinispan.server.config.dir
      
      socketBindings:
        defaultInterface: public
        portOffset: ${infinispan.socket.binding.port-offset:0}
        socketBinding:
          - name: management-http
            interface: management
            port: '${infinispan.management.http.port:9990}'
          - name: management-https
            interface: management
            port: '${infinispan.management.https.port:9993}'
          - name: hotrod
            port: '11222'
          - name: hotrod-internal
            interface: management
            port: '11223'
          - name: hotrod-external
            port: '11333'
          - name: jgroups-mping
            port: '0'
            multicastAddress: '${infinispan.default.multicast.address:234.99.54.14}'
            multicastPort: '45700'
          - name: jgroups-tcp
            port: '7600'
          - name: jgroups-tcp-fd
            port: '57600'
          - name: jgroups-udp
            port: '55200'
            multicastAddress: '${infinispan.default.multicast.address:234.99.54.14}'
            multicastPort: '45688'
          - name: jgroups-udp-fd
            port: '54200'
          - name: memcached
            port: '11211'
          - name: rest
            port: '8080'