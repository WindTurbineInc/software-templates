apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: chatbot-smiles-of-miles
  title: Secured Chatbot for Smiles of Miles Car Insurance with a Self-Hosted LLM
  description: Creates a secured quarkus application chatbot provisioning and inferencing a self-hosted LLM and RAG
  tags:
    - recommended
    - java
    - ai
    - rhoai
    - rhtap
spec:
  owner: rhdh
  type: service
  parameters:
    - title: Provide Information for Application
      required:
        - component_id
      properties:
        component_id:
          title: Name
          type: string
          description: Unique name of the component
          default: chatbot-app
          ui:field: EntityNamePicker
          maxLength: 12
        description:
          title: Description
          type: string
          description: Help others understand what this website is for.
          default: A cool quarkus chatbot app for Smiles of Miles
    - title: Large Language Model
      required:
        - model_name
        - model_max_length
      properties:
        model_name:
          title: Model Name
          type: string
          enum:
            - llama-4-scout-17b
            - llama-3-2b
            - deepseek-r1
            - mistral-7b-instruct-v03
            - parasol-instruct
            - granite-30-8b-instruct
        model_max_length:
          title: Max model length
          default: "4096"
          type: string
          description: The maximum length for this model
    - title: Provide Image Registry Information
      required:
        - image_registry
      properties:
        image_registry:
          title: Image Registry
          type: string
          default: Quay
          enum:
            - Quay
      dependencies:
        image_registry:
          oneOf:
            - properties:
                image_registry:
                  enum:
                    - Quay
                image_host:
                  title: Image Host
                  type: string
                  description: Host for storing image
                  default: quay-7p5mh.apps.cluster-7p5mh.7p5mh.sandbox1083.opentlc.com
                image_organization:
                  title: Organization
                  type: string
                  description: Name of the Quay Organization
                  default: quayadmin
                image_tag:
                  title: Image Tag
                  default: latest
                  type: string
                  description: Build Image tag
    - title: Application repository Information
      required:
        - repo
      properties:
        repo:
          title: Repository Location
          type: object
          properties:
            host:
              title: Repo Host
              type: string
              description: Your SCM host
              default: gitlab-gitlab.apps.cluster-7p5mh.7p5mh.sandbox1083.opentlc.com
              enum:
                - gitlab-gitlab.apps.cluster-7p5mh.7p5mh.sandbox1083.opentlc.com
            owner:
              title: Repo Owner
              type: string
              description: Your SCM host organization/group
              default: development
              enum:
                - development
            verify_commits:
              title: Verify Commits
              type: string
              description: Verify Git repository commits using Red Hatâ€™s Trusted Artifact Signer (TAS) service
              default: disabled
              enum:
                - enabled
                - disabled

  steps:
    - id: template
      name: Fetch Skeleton + Template
      action: fetch:template
      input:
        url: ./skeleton
        copyWithoutTemplating:
          - .github/workflows/*
        values:
          component_id: ${{ parameters.component_id }}
          description: ${{ parameters.description }}
          namespace: ${{ parameters.component_id }}-dev
          owner: ${{ user.entity.metadata.name }}
          cluster: .apps.cluster-7p5mh.7p5mh.sandbox1083.opentlc.com
          host: ${{ parameters.repo.host }}
          destination: ${{ parameters.repo.owner }}/${{ parameters.component_id }}
          quay_destination: ${{ parameters.image_organization}}/${{ parameters.component_id }}
          port: 8080
          verify_commits: ${{ parameters.repo.verify_commits }}
          model_name: ${{ parameters.model_name }}
          model_max_length: ${{ parameters.model_max_length }}

    - id: publish
      name: Publish
      action: publish:gitlab
      input:
        repoUrl: "${{ parameters.repo.host }}?owner=${{ parameters.repo.owner }}&repo=${{parameters.component_id}}"
        repoVisibility: public

    - id: register
      name: Register
      action: catalog:register
      input:
        repoContentsUrl: ${{ steps.publish.output.repoContentsUrl }}
        catalogInfoPath: "/catalog-info.yaml"

    - id: template-gitops-deployment
      name: Generating Deployment Resources
      action: fetch:template
      input:
        url: ./manifests
        copyWithoutTemplating: []
        values:
          component_id: ${{ parameters.component_id }}
          description: ${{ parameters.description }}
          destination: https://${{ parameters.repo.host }}/${{ parameters.repo.owner }}/${{parameters.component_id}}-gitops.git
          source_repository: https://${{ parameters.repo.host }}/${{ parameters.repo.owner }}/${{parameters.component_id}}.git
          repository_name: ${{parameters.component_id}}
          git_owner: ${{ parameters.repo.owner }}
          cluster: .apps.cluster-7p5mh.7p5mh.sandbox1083.opentlc.com
          namespace: ${{ parameters.component_id }}-dev
          image_registry: ${{ parameters.image_registry }}
          image_host: ${{ parameters.image_host }}
          image_organization: ${{ parameters.image_organization }}
          image_name: ${{ parameters.component_id }}
          image_tag: ${{ parameters.image_tag }}
          port: 8080
          repository_host: ${{ parameters.repo.host }}
          deployment_name: quarkus-template
          user: ${{ user.entity.metadata.name }}
          verify_commits: ${{ parameters.repo.verify_commits }}
          model_name: ${{ parameters.model_name }}
          model_max_length: ${{ parameters.model_max_length }}
        targetPath: ./tenant-gitops

    - id: publish-gitops
      name: Publishing to Resource Repository
      action: publish:gitlab
      input:
        repoUrl: "${{ parameters.repo.host }}?owner=${{ parameters.repo.owner }}&repo=${{parameters.component_id}}-gitops"
        title: gitops resources for ${{ parameters.component_id }}
        description: gitops resources for ${{ parameters.component_id }}
        sourcePath: ./tenant-gitops
        repoVisibility: public

    - id: create-argocd-resources
      name: Create ArgoCD Resources
      action: argocd:create-resources
      input:
        appName: ${{ parameters.component_id }}-bootstrap
        argoInstance: main
        namespace: janus-argocd
        repoUrl: https://${{ parameters.repo.host }}/${{ parameters.repo.owner }}/${{ parameters.component_id }}-gitops.git
        path: 'argocd/'

  output:
    links:
      - title: Source Code Repository
        url: ${{ steps.publish.output.remoteUrl }}
      - title: Open Component in catalog
        icon: catalog
        entityRef: ${{ steps.register.output.entityRef }}
